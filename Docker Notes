Docker:
-------
To package and containarize applications. And to ship them anywhere and run readily.
Docker manages the containers(which runs apps,libs,dependencies)
Docker has less isolation as containers share same underlying resources(CPU, Memory, Disk)
Docker consumes less memory, disk space and boot time. so can scale huge no of continers in a short time.

Dockers images are stored in dockerhub or docker store from where we can download images and make them run
ex: Ansible image is pulbilcy available in dockerhub, we can download it to host machine.
    Install docker on your host machine and create a container for ansible by using below command.

   docker run asnible
   docker run mongodb
   
Images vs Containers:
--------------------
Images are packages or templates for an application
Images are used to create containers
'N' no of containers can be created from same image. Each container is isolated from other even if its build from same image.
Developer writes a docker file by working with devops team from which a docker image is built. Devops team creates docker container using the docker image

    docker file -----> docker image------> docker container
    
Docker editions:
----------------
Community Edition
Enterprise Edition: Image management
                    Image security
                    Universal control plane for container management, orchestration for container runtime
                    
Docker Commands:
----------------
docker pull nginx               ---> Downloads the image of nginx from dockerhub to host machoine and will not create container
docker run nginx                ---> checks whether image is available in host machine, if not available connects to docker hub, 
                                     downloads image and creates container
docker ps                       ---> to list containers running
docker ps -a                    ---> to list containers riunning and exited previously
docker stop $ContainerID/Name   ---> stops a running container
docker rm $ContainerID/Name     ---> to remove stopped/exited container perminantly. so that we can save space consumed by container
docker images                   ---> to list images on host machine
docker rmi $image_name          ---> to remove image from host machine. Make sure you delete all running containers and 
                                     dependents before removing image
                                     
Container is meant to run a specific process/application or a task. When the application/process exited or task is completed, container exits.
You can not run os base image in a container, container will exit immedietly because os image has nothing to run
Ex: docker run ubuntu



Executing a coomand while starting/running a container:
------------------------------------------------------
Passing command to a container to run rather than exiting, you can append commands
Ex: docker run ubuntu sleep 5
which means a container for ubuntu is created and goes to sleep mode for 5secs and then exits.



Executing a coomand on a running the container:
-----------------------------------------------
docker exec ubuntu cat /etc/hosts
docker exec $ContainerName Command



Run - attach or detach:
----------------------
I have created a image for a web application. The repository name is "subhash/simple-web-app" which runs a web server on port 8080.
Ex: docker run subhash/simple-web-app
Above commnad runs in foreground meaning attached to standand output of container. able to see output of werservice on screen
You can do anything on container unless it stops.

If you want to run above simple-webapp in background mode.  so that we can execute commands on container.
Ex: docker run -d subhash/simple-web-app.

if you want to bring background running container to foreground 
Exl docker attach $ConTainerID



open -a Docker --> to start docker

